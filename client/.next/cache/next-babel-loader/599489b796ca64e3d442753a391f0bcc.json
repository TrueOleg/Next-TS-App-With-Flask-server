{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { catchAxiosError } from \"./error\";\nexport var postLogin =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(inputs) {\n    var data, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new URLSearchParams(inputs);\n            _context.next = 3;\n            return post(\"/api/login\", data)[\"catch\"](catchAxiosError);\n\n          case 3:\n            res = _context.sent;\n\n            if (!res.error) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.error);\n\n          case 6:\n            if (!(res.data && res.data.token)) {\n              _context.next = 9;\n              break;\n            }\n\n            alert(\"this is my token: (\".concat(res.data.token, \")\"));\n            return _context.abrupt(\"return\");\n\n          case 9:\n            return _context.abrupt(\"return\", \"Something unexpected happened!\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function postLogin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // a base configuration we can extend from\n\nvar baseConfig = {\n  baseURL: \"http://localhost:1323\"\n};\n\nvar post = function post(url, data) {\n  return axios.post(url, data, baseConfig)[\"catch\"](catchAxiosError);\n};","map":{"version":3,"sources":["/Users/oleg/Documents/test/hello-next/services/rest_service.ts"],"names":["axios","catchAxiosError","postLogin","inputs","data","URLSearchParams","post","res","error","token","alert","baseConfig","baseURL","url"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAGA,SAASC,eAAT,QAAgC,SAAhC;AAIA,OAAO,IAAMC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,IADiB,GACV,IAAIC,eAAJ,CAAoBF,MAApB,CADU;AAAA;AAAA,mBAEAG,IAAI,CAAC,YAAD,EAAeF,IAAf,CAAJ,UAA+BH,eAA/B,CAFA;;AAAA;AAEjBM,YAAAA,GAFiB;;AAAA,iBAGnBA,GAAG,CAACC,KAHe;AAAA;AAAA;AAAA;;AAAA,6CAIdD,GAAG,CAACC,KAJU;;AAAA;AAAA,kBAMnBD,GAAG,CAACH,IAAJ,IAAYG,GAAG,CAACH,IAAJ,CAASK,KANF;AAAA;AAAA;AAAA;;AAOrBC,YAAAA,KAAK,8BAAuBH,GAAG,CAACH,IAAJ,CAASK,KAAhC,OAAL;AAPqB;;AAAA;AAAA,6CAUhB,gCAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATP,SAAS;AAAA;AAAA;AAAA,GAAf,C,CAaP;;AACA,IAAMS,UAA8B,GAAG;AACrCC,EAAAA,OAAO,EAAE;AAD4B,CAAvC;;AAIA,IAAMN,IAAI,GAAG,SAAPA,IAAO,CAACO,GAAD,EAAcT,IAAd,EAAwC;AACnD,SAAOJ,KAAK,CAACM,IAAN,CAAWO,GAAX,EAAgBT,IAAhB,EAAsBO,UAAtB,WAAwCV,eAAxC,CAAP;AACD,CAFD","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { LoginInputs } from \"../pages/login\";\nimport { AuthToken } from \"./auth_token\";\nimport { catchAxiosError } from \"./error\";\n\ntype errorMessage = string\n\nexport const postLogin = async (inputs: LoginInputs): Promise<errorMessage | void> => {\n  const data = new URLSearchParams(inputs);\n  const res: any = await post(\"/api/login\", data).catch(catchAxiosError);\n  if (res.error) {\n    return res.error;\n  }\n  if (res.data && res.data.token) {\n    alert(`this is my token: (${res.data.token})`);\n    return;\n  }\n  return \"Something unexpected happened!\";\n};\n\n// a base configuration we can extend from\nconst baseConfig: AxiosRequestConfig = {\n  baseURL: \"http://localhost:1323\",\n};\n\nconst post = (url: string, data: URLSearchParams) => {\n  return axios.post(url, data, baseConfig).catch(catchAxiosError);\n};"]},"metadata":{},"sourceType":"module"}