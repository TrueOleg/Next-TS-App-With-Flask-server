{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/oleg/Documents/test/hello-next/pages/login.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Links } from \"../components/links\";\n\nfunction Login() {\n  // these values are hardcoded since our main.go api only accepts this auth combo\n  const initialValues = {\n    email: \"rickety_cricket@example.com\",\n    password: \"shhh!\"\n  };\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState(initialValues);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    alert(`TODO add login endpoint! ${_JSON$stringify(inputs)}`);\n  };\n\n  const handleInputChange = e => {\n    e.persist();\n    setInputs(_objectSpread({}, inputs, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Links, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    value: inputs.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    value: inputs.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/oleg/Documents/test/hello-next/pages/login.tsx"],"names":["React","useState","Links","Login","initialValues","email","password","inputs","setInputs","handleSubmit","e","preventDefault","alert","handleInputChange","persist","target","name","value"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,qBAAtB;;AAQA,SAASC,KAAT,GAAiB;AACf;AACA,QAAMC,aAA0B,GAAG;AACjCC,IAAAA,KAAK,EAAE,6BAD0B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAnC;AAKA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAACG,aAAD,CAApC;;AAEA,QAAMK,YAAY,GAAG,MAAOC,CAAP,IAAqC;AACxDA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAE,4BAA2B,gBAAeL,MAAf,CAAuB,EAApD,CAAL;AACD,GAHD;;AAKA,QAAMM,iBAAiB,GAAIH,CAAD,IAA+B;AACvDA,IAAAA,CAAC,CAACI,OAAF;AACAN,IAAAA,SAAS,mBACJD,MADI;AAEP,OAACG,CAAC,CAACK,MAAF,CAASC,IAAV,GAAiBN,CAAC,CAACK,MAAF,CAASE;AAFnB,OAAT;AAID,GAND;;AAQA,SAAO,4BACL,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEI,iBAHZ;AAIE,IAAA,KAAK,EAAEN,MAAM,CAACF,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEQ,iBAHZ;AAIE,IAAA,KAAK,EAAEN,MAAM,CAACD,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAmBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CAFK,CAAP;AAwBD;;AAED,eAAeH,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Links } from \"../components/links\";\nimport { postLogin } from \"../services/rest_service\";\n\nexport type LoginInputs = {\n  email: string\n  password: string\n}\n\nfunction Login() {\n  // these values are hardcoded since our main.go api only accepts this auth combo\n  const initialValues: LoginInputs = {\n    email: \"rickety_cricket@example.com\",\n    password: \"shhh!\",\n  };\n\n  const [inputs, setInputs] = useState(initialValues);\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    alert(`TODO add login endpoint! ${JSON.stringify(inputs)}`)\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<any>) => {\n    e.persist();\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return <>\n    <Links />\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          onChange={handleInputChange}\n          value={inputs.email}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          onChange={handleInputChange}\n          value={inputs.password}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  </>;\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}