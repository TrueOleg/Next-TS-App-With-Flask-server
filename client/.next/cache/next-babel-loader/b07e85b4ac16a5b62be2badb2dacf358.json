{"ast":null,"code":"import axios from \"axios\";\nimport { catchAxiosError } from \"./error\";\nexport const postLogin = async inputs => {\n  const data = new URLSearchParams(inputs);\n  const res = await post(\"/login\", data).catch(catchAxiosError);\n\n  if (res.error) {\n    return res.error;\n  }\n\n  if (res.data && res.data.token) {\n    alert(`this is my token: (${res.data.token})`);\n    return;\n  }\n\n  return \"Something unexpected happened!\";\n}; // a base configuration we can extend from\n\nconst baseConfig = {\n  baseURL: \"http://localhost:5000\"\n};\n\nconst post = (url, data) => {\n  return axios.post(url, data, baseConfig).catch(catchAxiosError);\n};","map":{"version":3,"sources":["/Users/oleg/Documents/test/hello-next/services/rest_service.ts"],"names":["axios","catchAxiosError","postLogin","inputs","data","URLSearchParams","res","post","catch","error","token","alert","baseConfig","baseURL","url"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAGA,SAASC,eAAT,QAAgC,SAAhC;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAP,IAA6D;AACpF,QAAMC,IAAI,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,CAAb;AACA,QAAMG,GAAQ,GAAG,MAAMC,IAAI,CAAC,QAAD,EAAWH,IAAX,CAAJ,CAAqBI,KAArB,CAA2BP,eAA3B,CAAvB;;AACA,MAAIK,GAAG,CAACG,KAAR,EAAe;AACb,WAAOH,GAAG,CAACG,KAAX;AACD;;AACD,MAAIH,GAAG,CAACF,IAAJ,IAAYE,GAAG,CAACF,IAAJ,CAASM,KAAzB,EAAgC;AAC9BC,IAAAA,KAAK,CAAE,sBAAqBL,GAAG,CAACF,IAAJ,CAASM,KAAM,GAAtC,CAAL;AACA;AACD;;AACD,SAAO,gCAAP;AACD,CAXM,C,CAaP;;AACA,MAAME,UAA8B,GAAG;AACrCC,EAAAA,OAAO,EAAE;AAD4B,CAAvC;;AAIA,MAAMN,IAAI,GAAG,CAACO,GAAD,EAAcV,IAAd,KAAwC;AACnD,SAAOJ,KAAK,CAACO,IAAN,CAAWO,GAAX,EAAgBV,IAAhB,EAAsBQ,UAAtB,EAAkCJ,KAAlC,CAAwCP,eAAxC,CAAP;AACD,CAFD","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { LoginInputs } from \"../pages/login\";\nimport { AuthToken } from \"./auth_token\";\nimport { catchAxiosError } from \"./error\";\n\ntype errorMessage = string\n\nexport const postLogin = async (inputs: LoginInputs): Promise<errorMessage | void> => {\n  const data = new URLSearchParams(inputs);\n  const res: any = await post(\"/login\", data).catch(catchAxiosError);\n  if (res.error) {\n    return res.error;\n  }\n  if (res.data && res.data.token) {\n    alert(`this is my token: (${res.data.token})`);\n    return;\n  }\n  return \"Something unexpected happened!\";\n};\n\n// a base configuration we can extend from\nconst baseConfig: AxiosRequestConfig = {\n  baseURL: \"http://localhost:5000\",\n};\n\nconst post = (url: string, data: URLSearchParams) => {\n  return axios.post(url, data, baseConfig).catch(catchAxiosError);\n};"]},"metadata":{},"sourceType":"module"}