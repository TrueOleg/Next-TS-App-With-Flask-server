{"version":3,"file":"static/webpack/static/development/pages/login.js.8ee572395f3e929cede2.hot-update.js","sources":["webpack:///./pages/login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Links } from \"../components/links\";\n// import { postLogin } from \"../services/rest_service\";\n\nexport type LoginInputs = {\n  email: string\n  password: string\n}\n\nfunction Login() {\n  // these values are hardcoded since our main.go api only accepts this auth combo\n  const initialValues: LoginInputs = {\n    email: \"rickety_cricket@example.com\",\n    password: \"shhh!\",\n  };\n\n  const [inputs, setInputs] = useState(initialValues);\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    alert(`TODO add login endpoint! ${JSON.stringify(inputs)}`)\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<any>) => {\n    e.persist();\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return <>\n    <Links />\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          onChange={handleInputChange}\n          value={inputs.email}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          onChange={handleInputChange}\n          value={inputs.password}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  </>;\n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAFA;AACA;AAHA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}